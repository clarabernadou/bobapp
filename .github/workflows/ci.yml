name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build and Test Back-end
        run: |
          cd back
          mvn clean install
          mvn clean test jacoco:report
          mkdir -p ../test-reports/backend
          cp target/site/jacoco/index.html ../test-reports/backend/

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies and Test Front-end
        run: |
          cd front
          npm install
          npx ng test --watch=false --code-coverage
          mkdir -p ../test-reports/frontend
          cp -r coverage ../test-reports/frontend/

  save-reports:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Upload test coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: test-reports

  publish-coverage:
    runs-on: ubuntu-latest
    needs: save-reports

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git for Pages
        run: |
          git config --local user.email "${{ secrets.USER_EMAIL }}"
          git config --local user.name "${{ secrets.USER_NAME }}"

      - name: Deploy Coverage Report to GitHub Pages
        run: |
          git add test-reports
          git commit -m "Publishing coverage reports"
          git push origin `gh-pages`


  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Front-end Docker Image
        run: |
          cd front
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest

      - name: Build and Push Back-end Docker Image
        run: |
          cd back
          docker build -t bobapp-back .
          docker tag bobapp-back ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest